//
//  r2intFFT.m
//  MonophonicPDA
//
//  Created by Ryan Hiroaki Tsukamoto on 9/10/11.
//  Copyright 2011 Miso Media Inc. All rights reserved.
//

#import "r2intFFT.h"

#import "r2intFFT.h"
#import <math.h>

//<copypasta>

#define CplxMul32Packed(x,p) { \
int tmp = x.real; int c = (p) & 0xffff0000; int s = ((p)<<16); \
x.real = (int)( ( (int64_t)tmp * (int64_t)c - (int64_t)x.imag * (int64_t)s ) >> 32 ); \
x.imag = (int)( ( (int64_t)tmp * (int64_t)s + (int64_t)x.imag * (int64_t)c ) >> 32 ); \
} \

#define Radix2IntButterfly(x0,x1,n) { \
int tmp = x0.real>>1; \
x0.real = tmp + (x1.real>>n);\
x1.real = tmp - (x1.real>>n);\
tmp = (x0.imag>>1); \
x0.imag = tmp + (x1.imag>>n);\
x1.imag = tmp - (x1.imag>>n);\
} \


//<not copypasta>
#define Radix2Int0Butterfly(x0,x1)	{	\
int tmp = x0.real>>1; \
x0.real = tmp + (x1.real);\
x1.real = tmp - (x1.real);\
tmp = (x0.imag>>1); \
x0.imag = tmp + (x1.imag);\
x1.imag = tmp - (x1.imag);\
} \

#define Radix2Int1Butterfly(x0,x1)	{	\
int tmp = x0.real>>1; \
x0.real = tmp + (x1.real>>1);\
x1.real = tmp - (x1.real>>1);\
tmp = (x0.imag>>1); \
x0.imag = tmp + (x1.imag>>1);\
x1.imag = tmp - (x1.imag>>1);\
} \

static int NormFloatToInt16(float x)
{
	return (int)(32767.0f * x);
}
//</not copypasta>

int NormDoubleToInt16(double x)
{
	return (int)(32767.0f * x);
}

static int FloatToInt16(float x)
{
    int y;
    if(x<0.f) {
        if(x<=-32768.0f) y = -32768;
        else y = (int)(x - 0.5f);
    } else {
        if(x>=32767.0f) y = 32767;
        else y = (int)(x + 0.5f);       
    }
    return y;
}

PackedInt16Cplx* CreatePackedTwiddleFactors(int size)
{
    int i;
    PackedInt16Cplx* twiddleFactors = (PackedInt16Cplx*)malloc(sizeof(PackedInt16Cplx)*size);
    float scaleFac = (float)(1<<15);
	
    if(twiddleFactors) {
        for(i = 0; i < size/2; ++i) {
            int cosSin;
            float tmp;
            tmp = scaleFac*cosf(2.0*M_PI*i/size);
            cosSin = FloatToInt16(tmp) << 16;
            tmp = -scaleFac*sinf(2.0*M_PI*i/size);
            cosSin |= FloatToInt16(tmp) & 0x0000ffff;
            twiddleFactors[i] = cosSin;
        }
    }
    return twiddleFactors;
}

void DisposePackedTwiddleFactors(PackedInt16Cplx* twiddleFactors)
{
    if(twiddleFactors) {
        free(twiddleFactors);
    }
}

void generate_bro_lookup(int two_exp, int* p_result)
{
	int two_pow = 1;
	for(int i = 0; i < two_exp; i++)	two_pow *= 2;
	int current_idx = 0;//increments by 2 every time a new pair is entered in
	for(int i = 0; i < two_pow; i++)
	{
		int this_number = i;
		int this_bro = 0;
		int this_bit = two_pow / 2;
		for(int j = 0; j < two_exp; j++)
		{
			this_bro += this_bit * (this_number % 2);
			this_number /= 2;
			this_bit /= 2;
		}
		if(i < this_bro)
		{
			p_result[current_idx++] = i;
			p_result[current_idx++] = this_bro;
		}
	}
}

void bro_with_lookup(Int32Cplx* ioCplxData, int* interleaved_bro_lookup, int N)
{
	int twice_N = 2 * N;
	int i = 0;
	while(i < twice_N)
	{
		Int32Cplx tmp = ioCplxData[interleaved_bro_lookup[i]];
		ioCplxData[interleaved_bro_lookup[i]] = ioCplxData[interleaved_bro_lookup[i+1]];
		ioCplxData[interleaved_bro_lookup[i+1]] = tmp;
		i += 2;
	}
}

void radix2_int32cplx_fft(Int32Cplx* xX, int N, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N)
{
	int span, twiddle, strides;
	bro_with_lookup(xX, interleaved_bro_lookup, bro_N);
	span = twiddle = 1;
	strides = N / 2;
	do
	{
		Int32Cplx x0, x1;
		int idx = 0;
		do
		{
			x0 = xX[idx];
			x1 = xX[idx + span];
			Radix2Int1Butterfly(x0, x1);
			xX[idx] = x0;
			xX[idx + span] = x1;
			idx += span << 1;
		}
		while(idx < N);
		twiddle = 1;
		while(twiddle < span)
		{
			int packed_tf = twiddles[strides * twiddle];
			idx = twiddle;
			do
			{
				x0 = xX[idx];
				x1 = xX[idx + span];
				CplxMul32Packed(x1, packed_tf);
				Radix2Int0Butterfly(x0, x1);
				xX[idx] = x0;
				xX[idx + span] = x1;
				idx += span << 1;
			}
			while(idx < N);
			twiddle++;
		}
		span <<= 1;
		strides >>= 1;
	}
	while(span < N);
}

void radix2_int32cplx_fft_2(Int32Cplx* xX, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N)
{
	bro_with_lookup(xX, interleaved_bro_lookup, bro_N);
	Int32Cplx x0, x1;
//	int packed_tf;
	x0 = xX[0];
	x1 = xX[1];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[1] = x1;
}

void radix2_int32cplx_fft_4(Int32Cplx* xX, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N)
{
	bro_with_lookup(xX, interleaved_bro_lookup, bro_N);
	Int32Cplx x0, x1;
	int packed_tf;
	x0 = xX[0];
	x1 = xX[1];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[1] = x1;
	x0 = xX[2];
	x1 = xX[3];
	Radix2Int1Butterfly(x0, x1);
	xX[2] = x0;
	xX[3] = x1;
	x0 = xX[0];
	x1 = xX[2];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[2] = x1;
	packed_tf = twiddles[1];
	x0 = xX[1];
	x1 = xX[3];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[3] = x1;
}

void radix2_int32cplx_fft_8(Int32Cplx* xX, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N)
{
	bro_with_lookup(xX, interleaved_bro_lookup, bro_N);
	Int32Cplx x0, x1;
	int packed_tf;
	x0 = xX[0];
	x1 = xX[1];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[1] = x1;
	x0 = xX[2];
	x1 = xX[3];
	Radix2Int1Butterfly(x0, x1);
	xX[2] = x0;
	xX[3] = x1;
	x0 = xX[4];
	x1 = xX[5];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[5] = x1;
	x0 = xX[6];
	x1 = xX[7];
	Radix2Int1Butterfly(x0, x1);
	xX[6] = x0;
	xX[7] = x1;
	x0 = xX[0];
	x1 = xX[2];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[2] = x1;
	x0 = xX[4];
	x1 = xX[6];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[6] = x1;
	packed_tf = twiddles[2];
	x0 = xX[1];
	x1 = xX[3];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[3] = x1;
	x0 = xX[5];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[7] = x1;
	x0 = xX[0];
	x1 = xX[4];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[4] = x1;
	packed_tf = twiddles[1];
	x0 = xX[1];
	x1 = xX[5];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[5] = x1;
	packed_tf = twiddles[2];
	x0 = xX[2];
	x1 = xX[6];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[6] = x1;
	packed_tf = twiddles[3];
	x0 = xX[3];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[7] = x1;
}

void radix2_int32cplx_fft_16(Int32Cplx* xX, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N)
{
	bro_with_lookup(xX, interleaved_bro_lookup, bro_N);
	Int32Cplx x0, x1;
	int packed_tf;
	x0 = xX[0];
	x1 = xX[1];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[1] = x1;
	x0 = xX[2];
	x1 = xX[3];
	Radix2Int1Butterfly(x0, x1);
	xX[2] = x0;
	xX[3] = x1;
	x0 = xX[4];
	x1 = xX[5];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[5] = x1;
	x0 = xX[6];
	x1 = xX[7];
	Radix2Int1Butterfly(x0, x1);
	xX[6] = x0;
	xX[7] = x1;
	x0 = xX[8];
	x1 = xX[9];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[9] = x1;
	x0 = xX[10];
	x1 = xX[11];
	Radix2Int1Butterfly(x0, x1);
	xX[10] = x0;
	xX[11] = x1;
	x0 = xX[12];
	x1 = xX[13];
	Radix2Int1Butterfly(x0, x1);
	xX[12] = x0;
	xX[13] = x1;
	x0 = xX[14];
	x1 = xX[15];
	Radix2Int1Butterfly(x0, x1);
	xX[14] = x0;
	xX[15] = x1;
	x0 = xX[0];
	x1 = xX[2];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[2] = x1;
	x0 = xX[4];
	x1 = xX[6];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[6] = x1;
	x0 = xX[8];
	x1 = xX[10];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[10] = x1;
	x0 = xX[12];
	x1 = xX[14];
	Radix2Int1Butterfly(x0, x1);
	xX[12] = x0;
	xX[14] = x1;
	packed_tf = twiddles[4];
	x0 = xX[1];
	x1 = xX[3];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[3] = x1;
	x0 = xX[5];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[7] = x1;
	x0 = xX[9];
	x1 = xX[11];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[11] = x1;
	x0 = xX[13];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[15] = x1;
	x0 = xX[0];
	x1 = xX[4];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[4] = x1;
	x0 = xX[8];
	x1 = xX[12];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[12] = x1;
	packed_tf = twiddles[2];
	x0 = xX[1];
	x1 = xX[5];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[5] = x1;
	x0 = xX[9];
	x1 = xX[13];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[13] = x1;
	packed_tf = twiddles[4];
	x0 = xX[2];
	x1 = xX[6];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[6] = x1;
	x0 = xX[10];
	x1 = xX[14];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[14] = x1;
	packed_tf = twiddles[6];
	x0 = xX[3];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[7] = x1;
	x0 = xX[11];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[15] = x1;
	x0 = xX[0];
	x1 = xX[8];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[8] = x1;
	packed_tf = twiddles[1];
	x0 = xX[1];
	x1 = xX[9];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[9] = x1;
	packed_tf = twiddles[2];
	x0 = xX[2];
	x1 = xX[10];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[10] = x1;
	packed_tf = twiddles[3];
	x0 = xX[3];
	x1 = xX[11];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[11] = x1;
	packed_tf = twiddles[4];
	x0 = xX[4];
	x1 = xX[12];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[12] = x1;
	packed_tf = twiddles[5];
	x0 = xX[5];
	x1 = xX[13];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[13] = x1;
	packed_tf = twiddles[6];
	x0 = xX[6];
	x1 = xX[14];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[14] = x1;
	packed_tf = twiddles[7];
	x0 = xX[7];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[15] = x1;
}

void radix2_int32cplx_fft_32(Int32Cplx* xX, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N)
{
	bro_with_lookup(xX, interleaved_bro_lookup, bro_N);
	Int32Cplx x0, x1;
	int packed_tf;
	x0 = xX[0];
	x1 = xX[1];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[1] = x1;
	x0 = xX[2];
	x1 = xX[3];
	Radix2Int1Butterfly(x0, x1);
	xX[2] = x0;
	xX[3] = x1;
	x0 = xX[4];
	x1 = xX[5];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[5] = x1;
	x0 = xX[6];
	x1 = xX[7];
	Radix2Int1Butterfly(x0, x1);
	xX[6] = x0;
	xX[7] = x1;
	x0 = xX[8];
	x1 = xX[9];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[9] = x1;
	x0 = xX[10];
	x1 = xX[11];
	Radix2Int1Butterfly(x0, x1);
	xX[10] = x0;
	xX[11] = x1;
	x0 = xX[12];
	x1 = xX[13];
	Radix2Int1Butterfly(x0, x1);
	xX[12] = x0;
	xX[13] = x1;
	x0 = xX[14];
	x1 = xX[15];
	Radix2Int1Butterfly(x0, x1);
	xX[14] = x0;
	xX[15] = x1;
	x0 = xX[16];
	x1 = xX[17];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[17] = x1;
	x0 = xX[18];
	x1 = xX[19];
	Radix2Int1Butterfly(x0, x1);
	xX[18] = x0;
	xX[19] = x1;
	x0 = xX[20];
	x1 = xX[21];
	Radix2Int1Butterfly(x0, x1);
	xX[20] = x0;
	xX[21] = x1;
	x0 = xX[22];
	x1 = xX[23];
	Radix2Int1Butterfly(x0, x1);
	xX[22] = x0;
	xX[23] = x1;
	x0 = xX[24];
	x1 = xX[25];
	Radix2Int1Butterfly(x0, x1);
	xX[24] = x0;
	xX[25] = x1;
	x0 = xX[26];
	x1 = xX[27];
	Radix2Int1Butterfly(x0, x1);
	xX[26] = x0;
	xX[27] = x1;
	x0 = xX[28];
	x1 = xX[29];
	Radix2Int1Butterfly(x0, x1);
	xX[28] = x0;
	xX[29] = x1;
	x0 = xX[30];
	x1 = xX[31];
	Radix2Int1Butterfly(x0, x1);
	xX[30] = x0;
	xX[31] = x1;
	x0 = xX[0];
	x1 = xX[2];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[2] = x1;
	x0 = xX[4];
	x1 = xX[6];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[6] = x1;
	x0 = xX[8];
	x1 = xX[10];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[10] = x1;
	x0 = xX[12];
	x1 = xX[14];
	Radix2Int1Butterfly(x0, x1);
	xX[12] = x0;
	xX[14] = x1;
	x0 = xX[16];
	x1 = xX[18];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[18] = x1;
	x0 = xX[20];
	x1 = xX[22];
	Radix2Int1Butterfly(x0, x1);
	xX[20] = x0;
	xX[22] = x1;
	x0 = xX[24];
	x1 = xX[26];
	Radix2Int1Butterfly(x0, x1);
	xX[24] = x0;
	xX[26] = x1;
	x0 = xX[28];
	x1 = xX[30];
	Radix2Int1Butterfly(x0, x1);
	xX[28] = x0;
	xX[30] = x1;
	packed_tf = twiddles[8];
	x0 = xX[1];
	x1 = xX[3];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[3] = x1;
	x0 = xX[5];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[7] = x1;
	x0 = xX[9];
	x1 = xX[11];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[11] = x1;
	x0 = xX[13];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[15] = x1;
	x0 = xX[17];
	x1 = xX[19];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[19] = x1;
	x0 = xX[21];
	x1 = xX[23];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[21] = x0;
	xX[23] = x1;
	x0 = xX[25];
	x1 = xX[27];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[25] = x0;
	xX[27] = x1;
	x0 = xX[29];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[29] = x0;
	xX[31] = x1;
	x0 = xX[0];
	x1 = xX[4];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[4] = x1;
	x0 = xX[8];
	x1 = xX[12];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[12] = x1;
	x0 = xX[16];
	x1 = xX[20];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[20] = x1;
	x0 = xX[24];
	x1 = xX[28];
	Radix2Int1Butterfly(x0, x1);
	xX[24] = x0;
	xX[28] = x1;
	packed_tf = twiddles[4];
	x0 = xX[1];
	x1 = xX[5];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[5] = x1;
	x0 = xX[9];
	x1 = xX[13];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[13] = x1;
	x0 = xX[17];
	x1 = xX[21];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[21] = x1;
	x0 = xX[25];
	x1 = xX[29];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[25] = x0;
	xX[29] = x1;
	packed_tf = twiddles[8];
	x0 = xX[2];
	x1 = xX[6];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[6] = x1;
	x0 = xX[10];
	x1 = xX[14];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[14] = x1;
	x0 = xX[18];
	x1 = xX[22];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[18] = x0;
	xX[22] = x1;
	x0 = xX[26];
	x1 = xX[30];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[26] = x0;
	xX[30] = x1;
	packed_tf = twiddles[12];
	x0 = xX[3];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[7] = x1;
	x0 = xX[11];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[15] = x1;
	x0 = xX[19];
	x1 = xX[23];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[19] = x0;
	xX[23] = x1;
	x0 = xX[27];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[27] = x0;
	xX[31] = x1;
	x0 = xX[0];
	x1 = xX[8];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[8] = x1;
	x0 = xX[16];
	x1 = xX[24];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[24] = x1;
	packed_tf = twiddles[2];
	x0 = xX[1];
	x1 = xX[9];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[9] = x1;
	x0 = xX[17];
	x1 = xX[25];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[25] = x1;
	packed_tf = twiddles[4];
	x0 = xX[2];
	x1 = xX[10];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[10] = x1;
	x0 = xX[18];
	x1 = xX[26];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[18] = x0;
	xX[26] = x1;
	packed_tf = twiddles[6];
	x0 = xX[3];
	x1 = xX[11];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[11] = x1;
	x0 = xX[19];
	x1 = xX[27];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[19] = x0;
	xX[27] = x1;
	packed_tf = twiddles[8];
	x0 = xX[4];
	x1 = xX[12];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[12] = x1;
	x0 = xX[20];
	x1 = xX[28];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[20] = x0;
	xX[28] = x1;
	packed_tf = twiddles[10];
	x0 = xX[5];
	x1 = xX[13];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[13] = x1;
	x0 = xX[21];
	x1 = xX[29];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[21] = x0;
	xX[29] = x1;
	packed_tf = twiddles[12];
	x0 = xX[6];
	x1 = xX[14];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[14] = x1;
	x0 = xX[22];
	x1 = xX[30];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[22] = x0;
	xX[30] = x1;
	packed_tf = twiddles[14];
	x0 = xX[7];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[15] = x1;
	x0 = xX[23];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[23] = x0;
	xX[31] = x1;
	x0 = xX[0];
	x1 = xX[16];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[16] = x1;
	packed_tf = twiddles[1];
	x0 = xX[1];
	x1 = xX[17];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[17] = x1;
	packed_tf = twiddles[2];
	x0 = xX[2];
	x1 = xX[18];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[18] = x1;
	packed_tf = twiddles[3];
	x0 = xX[3];
	x1 = xX[19];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[19] = x1;
	packed_tf = twiddles[4];
	x0 = xX[4];
	x1 = xX[20];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[20] = x1;
	packed_tf = twiddles[5];
	x0 = xX[5];
	x1 = xX[21];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[21] = x1;
	packed_tf = twiddles[6];
	x0 = xX[6];
	x1 = xX[22];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[22] = x1;
	packed_tf = twiddles[7];
	x0 = xX[7];
	x1 = xX[23];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[23] = x1;
	packed_tf = twiddles[8];
	x0 = xX[8];
	x1 = xX[24];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[8] = x0;
	xX[24] = x1;
	packed_tf = twiddles[9];
	x0 = xX[9];
	x1 = xX[25];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[25] = x1;
	packed_tf = twiddles[10];
	x0 = xX[10];
	x1 = xX[26];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[26] = x1;
	packed_tf = twiddles[11];
	x0 = xX[11];
	x1 = xX[27];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[27] = x1;
	packed_tf = twiddles[12];
	x0 = xX[12];
	x1 = xX[28];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[12] = x0;
	xX[28] = x1;
	packed_tf = twiddles[13];
	x0 = xX[13];
	x1 = xX[29];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[29] = x1;
	packed_tf = twiddles[14];
	x0 = xX[14];
	x1 = xX[30];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[14] = x0;
	xX[30] = x1;
	packed_tf = twiddles[15];
	x0 = xX[15];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[15] = x0;
	xX[31] = x1;
}

void radix2_int32cplx_fft_64(Int32Cplx* xX, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N)
{
	bro_with_lookup(xX, interleaved_bro_lookup, bro_N);
	Int32Cplx x0, x1;
	int packed_tf;
	x0 = xX[0];
	x1 = xX[1];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[1] = x1;
	x0 = xX[2];
	x1 = xX[3];
	Radix2Int1Butterfly(x0, x1);
	xX[2] = x0;
	xX[3] = x1;
	x0 = xX[4];
	x1 = xX[5];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[5] = x1;
	x0 = xX[6];
	x1 = xX[7];
	Radix2Int1Butterfly(x0, x1);
	xX[6] = x0;
	xX[7] = x1;
	x0 = xX[8];
	x1 = xX[9];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[9] = x1;
	x0 = xX[10];
	x1 = xX[11];
	Radix2Int1Butterfly(x0, x1);
	xX[10] = x0;
	xX[11] = x1;
	x0 = xX[12];
	x1 = xX[13];
	Radix2Int1Butterfly(x0, x1);
	xX[12] = x0;
	xX[13] = x1;
	x0 = xX[14];
	x1 = xX[15];
	Radix2Int1Butterfly(x0, x1);
	xX[14] = x0;
	xX[15] = x1;
	x0 = xX[16];
	x1 = xX[17];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[17] = x1;
	x0 = xX[18];
	x1 = xX[19];
	Radix2Int1Butterfly(x0, x1);
	xX[18] = x0;
	xX[19] = x1;
	x0 = xX[20];
	x1 = xX[21];
	Radix2Int1Butterfly(x0, x1);
	xX[20] = x0;
	xX[21] = x1;
	x0 = xX[22];
	x1 = xX[23];
	Radix2Int1Butterfly(x0, x1);
	xX[22] = x0;
	xX[23] = x1;
	x0 = xX[24];
	x1 = xX[25];
	Radix2Int1Butterfly(x0, x1);
	xX[24] = x0;
	xX[25] = x1;
	x0 = xX[26];
	x1 = xX[27];
	Radix2Int1Butterfly(x0, x1);
	xX[26] = x0;
	xX[27] = x1;
	x0 = xX[28];
	x1 = xX[29];
	Radix2Int1Butterfly(x0, x1);
	xX[28] = x0;
	xX[29] = x1;
	x0 = xX[30];
	x1 = xX[31];
	Radix2Int1Butterfly(x0, x1);
	xX[30] = x0;
	xX[31] = x1;
	x0 = xX[32];
	x1 = xX[33];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[33] = x1;
	x0 = xX[34];
	x1 = xX[35];
	Radix2Int1Butterfly(x0, x1);
	xX[34] = x0;
	xX[35] = x1;
	x0 = xX[36];
	x1 = xX[37];
	Radix2Int1Butterfly(x0, x1);
	xX[36] = x0;
	xX[37] = x1;
	x0 = xX[38];
	x1 = xX[39];
	Radix2Int1Butterfly(x0, x1);
	xX[38] = x0;
	xX[39] = x1;
	x0 = xX[40];
	x1 = xX[41];
	Radix2Int1Butterfly(x0, x1);
	xX[40] = x0;
	xX[41] = x1;
	x0 = xX[42];
	x1 = xX[43];
	Radix2Int1Butterfly(x0, x1);
	xX[42] = x0;
	xX[43] = x1;
	x0 = xX[44];
	x1 = xX[45];
	Radix2Int1Butterfly(x0, x1);
	xX[44] = x0;
	xX[45] = x1;
	x0 = xX[46];
	x1 = xX[47];
	Radix2Int1Butterfly(x0, x1);
	xX[46] = x0;
	xX[47] = x1;
	x0 = xX[48];
	x1 = xX[49];
	Radix2Int1Butterfly(x0, x1);
	xX[48] = x0;
	xX[49] = x1;
	x0 = xX[50];
	x1 = xX[51];
	Radix2Int1Butterfly(x0, x1);
	xX[50] = x0;
	xX[51] = x1;
	x0 = xX[52];
	x1 = xX[53];
	Radix2Int1Butterfly(x0, x1);
	xX[52] = x0;
	xX[53] = x1;
	x0 = xX[54];
	x1 = xX[55];
	Radix2Int1Butterfly(x0, x1);
	xX[54] = x0;
	xX[55] = x1;
	x0 = xX[56];
	x1 = xX[57];
	Radix2Int1Butterfly(x0, x1);
	xX[56] = x0;
	xX[57] = x1;
	x0 = xX[58];
	x1 = xX[59];
	Radix2Int1Butterfly(x0, x1);
	xX[58] = x0;
	xX[59] = x1;
	x0 = xX[60];
	x1 = xX[61];
	Radix2Int1Butterfly(x0, x1);
	xX[60] = x0;
	xX[61] = x1;
	x0 = xX[62];
	x1 = xX[63];
	Radix2Int1Butterfly(x0, x1);
	xX[62] = x0;
	xX[63] = x1;
	x0 = xX[0];
	x1 = xX[2];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[2] = x1;
	x0 = xX[4];
	x1 = xX[6];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[6] = x1;
	x0 = xX[8];
	x1 = xX[10];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[10] = x1;
	x0 = xX[12];
	x1 = xX[14];
	Radix2Int1Butterfly(x0, x1);
	xX[12] = x0;
	xX[14] = x1;
	x0 = xX[16];
	x1 = xX[18];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[18] = x1;
	x0 = xX[20];
	x1 = xX[22];
	Radix2Int1Butterfly(x0, x1);
	xX[20] = x0;
	xX[22] = x1;
	x0 = xX[24];
	x1 = xX[26];
	Radix2Int1Butterfly(x0, x1);
	xX[24] = x0;
	xX[26] = x1;
	x0 = xX[28];
	x1 = xX[30];
	Radix2Int1Butterfly(x0, x1);
	xX[28] = x0;
	xX[30] = x1;
	x0 = xX[32];
	x1 = xX[34];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[34] = x1;
	x0 = xX[36];
	x1 = xX[38];
	Radix2Int1Butterfly(x0, x1);
	xX[36] = x0;
	xX[38] = x1;
	x0 = xX[40];
	x1 = xX[42];
	Radix2Int1Butterfly(x0, x1);
	xX[40] = x0;
	xX[42] = x1;
	x0 = xX[44];
	x1 = xX[46];
	Radix2Int1Butterfly(x0, x1);
	xX[44] = x0;
	xX[46] = x1;
	x0 = xX[48];
	x1 = xX[50];
	Radix2Int1Butterfly(x0, x1);
	xX[48] = x0;
	xX[50] = x1;
	x0 = xX[52];
	x1 = xX[54];
	Radix2Int1Butterfly(x0, x1);
	xX[52] = x0;
	xX[54] = x1;
	x0 = xX[56];
	x1 = xX[58];
	Radix2Int1Butterfly(x0, x1);
	xX[56] = x0;
	xX[58] = x1;
	x0 = xX[60];
	x1 = xX[62];
	Radix2Int1Butterfly(x0, x1);
	xX[60] = x0;
	xX[62] = x1;
	packed_tf = twiddles[16];
	x0 = xX[1];
	x1 = xX[3];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[3] = x1;
	x0 = xX[5];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[7] = x1;
	x0 = xX[9];
	x1 = xX[11];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[11] = x1;
	x0 = xX[13];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[15] = x1;
	x0 = xX[17];
	x1 = xX[19];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[19] = x1;
	x0 = xX[21];
	x1 = xX[23];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[21] = x0;
	xX[23] = x1;
	x0 = xX[25];
	x1 = xX[27];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[25] = x0;
	xX[27] = x1;
	x0 = xX[29];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[29] = x0;
	xX[31] = x1;
	x0 = xX[33];
	x1 = xX[35];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[33] = x0;
	xX[35] = x1;
	x0 = xX[37];
	x1 = xX[39];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[37] = x0;
	xX[39] = x1;
	x0 = xX[41];
	x1 = xX[43];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[41] = x0;
	xX[43] = x1;
	x0 = xX[45];
	x1 = xX[47];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[45] = x0;
	xX[47] = x1;
	x0 = xX[49];
	x1 = xX[51];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[49] = x0;
	xX[51] = x1;
	x0 = xX[53];
	x1 = xX[55];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[53] = x0;
	xX[55] = x1;
	x0 = xX[57];
	x1 = xX[59];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[57] = x0;
	xX[59] = x1;
	x0 = xX[61];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[61] = x0;
	xX[63] = x1;
	x0 = xX[0];
	x1 = xX[4];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[4] = x1;
	x0 = xX[8];
	x1 = xX[12];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[12] = x1;
	x0 = xX[16];
	x1 = xX[20];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[20] = x1;
	x0 = xX[24];
	x1 = xX[28];
	Radix2Int1Butterfly(x0, x1);
	xX[24] = x0;
	xX[28] = x1;
	x0 = xX[32];
	x1 = xX[36];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[36] = x1;
	x0 = xX[40];
	x1 = xX[44];
	Radix2Int1Butterfly(x0, x1);
	xX[40] = x0;
	xX[44] = x1;
	x0 = xX[48];
	x1 = xX[52];
	Radix2Int1Butterfly(x0, x1);
	xX[48] = x0;
	xX[52] = x1;
	x0 = xX[56];
	x1 = xX[60];
	Radix2Int1Butterfly(x0, x1);
	xX[56] = x0;
	xX[60] = x1;
	packed_tf = twiddles[8];
	x0 = xX[1];
	x1 = xX[5];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[5] = x1;
	x0 = xX[9];
	x1 = xX[13];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[13] = x1;
	x0 = xX[17];
	x1 = xX[21];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[21] = x1;
	x0 = xX[25];
	x1 = xX[29];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[25] = x0;
	xX[29] = x1;
	x0 = xX[33];
	x1 = xX[37];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[33] = x0;
	xX[37] = x1;
	x0 = xX[41];
	x1 = xX[45];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[41] = x0;
	xX[45] = x1;
	x0 = xX[49];
	x1 = xX[53];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[49] = x0;
	xX[53] = x1;
	x0 = xX[57];
	x1 = xX[61];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[57] = x0;
	xX[61] = x1;
	packed_tf = twiddles[16];
	x0 = xX[2];
	x1 = xX[6];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[6] = x1;
	x0 = xX[10];
	x1 = xX[14];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[14] = x1;
	x0 = xX[18];
	x1 = xX[22];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[18] = x0;
	xX[22] = x1;
	x0 = xX[26];
	x1 = xX[30];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[26] = x0;
	xX[30] = x1;
	x0 = xX[34];
	x1 = xX[38];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[34] = x0;
	xX[38] = x1;
	x0 = xX[42];
	x1 = xX[46];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[42] = x0;
	xX[46] = x1;
	x0 = xX[50];
	x1 = xX[54];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[50] = x0;
	xX[54] = x1;
	x0 = xX[58];
	x1 = xX[62];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[58] = x0;
	xX[62] = x1;
	packed_tf = twiddles[24];
	x0 = xX[3];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[7] = x1;
	x0 = xX[11];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[15] = x1;
	x0 = xX[19];
	x1 = xX[23];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[19] = x0;
	xX[23] = x1;
	x0 = xX[27];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[27] = x0;
	xX[31] = x1;
	x0 = xX[35];
	x1 = xX[39];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[35] = x0;
	xX[39] = x1;
	x0 = xX[43];
	x1 = xX[47];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[43] = x0;
	xX[47] = x1;
	x0 = xX[51];
	x1 = xX[55];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[51] = x0;
	xX[55] = x1;
	x0 = xX[59];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[59] = x0;
	xX[63] = x1;
	x0 = xX[0];
	x1 = xX[8];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[8] = x1;
	x0 = xX[16];
	x1 = xX[24];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[24] = x1;
	x0 = xX[32];
	x1 = xX[40];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[40] = x1;
	x0 = xX[48];
	x1 = xX[56];
	Radix2Int1Butterfly(x0, x1);
	xX[48] = x0;
	xX[56] = x1;
	packed_tf = twiddles[4];
	x0 = xX[1];
	x1 = xX[9];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[9] = x1;
	x0 = xX[17];
	x1 = xX[25];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[25] = x1;
	x0 = xX[33];
	x1 = xX[41];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[33] = x0;
	xX[41] = x1;
	x0 = xX[49];
	x1 = xX[57];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[49] = x0;
	xX[57] = x1;
	packed_tf = twiddles[8];
	x0 = xX[2];
	x1 = xX[10];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[10] = x1;
	x0 = xX[18];
	x1 = xX[26];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[18] = x0;
	xX[26] = x1;
	x0 = xX[34];
	x1 = xX[42];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[34] = x0;
	xX[42] = x1;
	x0 = xX[50];
	x1 = xX[58];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[50] = x0;
	xX[58] = x1;
	packed_tf = twiddles[12];
	x0 = xX[3];
	x1 = xX[11];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[11] = x1;
	x0 = xX[19];
	x1 = xX[27];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[19] = x0;
	xX[27] = x1;
	x0 = xX[35];
	x1 = xX[43];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[35] = x0;
	xX[43] = x1;
	x0 = xX[51];
	x1 = xX[59];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[51] = x0;
	xX[59] = x1;
	packed_tf = twiddles[16];
	x0 = xX[4];
	x1 = xX[12];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[12] = x1;
	x0 = xX[20];
	x1 = xX[28];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[20] = x0;
	xX[28] = x1;
	x0 = xX[36];
	x1 = xX[44];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[36] = x0;
	xX[44] = x1;
	x0 = xX[52];
	x1 = xX[60];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[52] = x0;
	xX[60] = x1;
	packed_tf = twiddles[20];
	x0 = xX[5];
	x1 = xX[13];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[13] = x1;
	x0 = xX[21];
	x1 = xX[29];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[21] = x0;
	xX[29] = x1;
	x0 = xX[37];
	x1 = xX[45];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[37] = x0;
	xX[45] = x1;
	x0 = xX[53];
	x1 = xX[61];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[53] = x0;
	xX[61] = x1;
	packed_tf = twiddles[24];
	x0 = xX[6];
	x1 = xX[14];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[14] = x1;
	x0 = xX[22];
	x1 = xX[30];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[22] = x0;
	xX[30] = x1;
	x0 = xX[38];
	x1 = xX[46];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[38] = x0;
	xX[46] = x1;
	x0 = xX[54];
	x1 = xX[62];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[54] = x0;
	xX[62] = x1;
	packed_tf = twiddles[28];
	x0 = xX[7];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[15] = x1;
	x0 = xX[23];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[23] = x0;
	xX[31] = x1;
	x0 = xX[39];
	x1 = xX[47];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[39] = x0;
	xX[47] = x1;
	x0 = xX[55];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[55] = x0;
	xX[63] = x1;
	x0 = xX[0];
	x1 = xX[16];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[16] = x1;
	x0 = xX[32];
	x1 = xX[48];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[48] = x1;
	packed_tf = twiddles[2];
	x0 = xX[1];
	x1 = xX[17];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[17] = x1;
	x0 = xX[33];
	x1 = xX[49];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[33] = x0;
	xX[49] = x1;
	packed_tf = twiddles[4];
	x0 = xX[2];
	x1 = xX[18];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[18] = x1;
	x0 = xX[34];
	x1 = xX[50];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[34] = x0;
	xX[50] = x1;
	packed_tf = twiddles[6];
	x0 = xX[3];
	x1 = xX[19];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[19] = x1;
	x0 = xX[35];
	x1 = xX[51];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[35] = x0;
	xX[51] = x1;
	packed_tf = twiddles[8];
	x0 = xX[4];
	x1 = xX[20];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[20] = x1;
	x0 = xX[36];
	x1 = xX[52];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[36] = x0;
	xX[52] = x1;
	packed_tf = twiddles[10];
	x0 = xX[5];
	x1 = xX[21];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[21] = x1;
	x0 = xX[37];
	x1 = xX[53];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[37] = x0;
	xX[53] = x1;
	packed_tf = twiddles[12];
	x0 = xX[6];
	x1 = xX[22];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[22] = x1;
	x0 = xX[38];
	x1 = xX[54];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[38] = x0;
	xX[54] = x1;
	packed_tf = twiddles[14];
	x0 = xX[7];
	x1 = xX[23];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[23] = x1;
	x0 = xX[39];
	x1 = xX[55];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[39] = x0;
	xX[55] = x1;
	packed_tf = twiddles[16];
	x0 = xX[8];
	x1 = xX[24];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[8] = x0;
	xX[24] = x1;
	x0 = xX[40];
	x1 = xX[56];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[40] = x0;
	xX[56] = x1;
	packed_tf = twiddles[18];
	x0 = xX[9];
	x1 = xX[25];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[25] = x1;
	x0 = xX[41];
	x1 = xX[57];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[41] = x0;
	xX[57] = x1;
	packed_tf = twiddles[20];
	x0 = xX[10];
	x1 = xX[26];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[26] = x1;
	x0 = xX[42];
	x1 = xX[58];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[42] = x0;
	xX[58] = x1;
	packed_tf = twiddles[22];
	x0 = xX[11];
	x1 = xX[27];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[27] = x1;
	x0 = xX[43];
	x1 = xX[59];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[43] = x0;
	xX[59] = x1;
	packed_tf = twiddles[24];
	x0 = xX[12];
	x1 = xX[28];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[12] = x0;
	xX[28] = x1;
	x0 = xX[44];
	x1 = xX[60];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[44] = x0;
	xX[60] = x1;
	packed_tf = twiddles[26];
	x0 = xX[13];
	x1 = xX[29];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[29] = x1;
	x0 = xX[45];
	x1 = xX[61];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[45] = x0;
	xX[61] = x1;
	packed_tf = twiddles[28];
	x0 = xX[14];
	x1 = xX[30];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[14] = x0;
	xX[30] = x1;
	x0 = xX[46];
	x1 = xX[62];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[46] = x0;
	xX[62] = x1;
	packed_tf = twiddles[30];
	x0 = xX[15];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[15] = x0;
	xX[31] = x1;
	x0 = xX[47];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[47] = x0;
	xX[63] = x1;
	x0 = xX[0];
	x1 = xX[32];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[32] = x1;
	packed_tf = twiddles[1];
	x0 = xX[1];
	x1 = xX[33];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[33] = x1;
	packed_tf = twiddles[2];
	x0 = xX[2];
	x1 = xX[34];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[34] = x1;
	packed_tf = twiddles[3];
	x0 = xX[3];
	x1 = xX[35];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[35] = x1;
	packed_tf = twiddles[4];
	x0 = xX[4];
	x1 = xX[36];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[36] = x1;
	packed_tf = twiddles[5];
	x0 = xX[5];
	x1 = xX[37];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[37] = x1;
	packed_tf = twiddles[6];
	x0 = xX[6];
	x1 = xX[38];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[38] = x1;
	packed_tf = twiddles[7];
	x0 = xX[7];
	x1 = xX[39];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[39] = x1;
	packed_tf = twiddles[8];
	x0 = xX[8];
	x1 = xX[40];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[8] = x0;
	xX[40] = x1;
	packed_tf = twiddles[9];
	x0 = xX[9];
	x1 = xX[41];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[41] = x1;
	packed_tf = twiddles[10];
	x0 = xX[10];
	x1 = xX[42];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[42] = x1;
	packed_tf = twiddles[11];
	x0 = xX[11];
	x1 = xX[43];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[43] = x1;
	packed_tf = twiddles[12];
	x0 = xX[12];
	x1 = xX[44];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[12] = x0;
	xX[44] = x1;
	packed_tf = twiddles[13];
	x0 = xX[13];
	x1 = xX[45];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[45] = x1;
	packed_tf = twiddles[14];
	x0 = xX[14];
	x1 = xX[46];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[14] = x0;
	xX[46] = x1;
	packed_tf = twiddles[15];
	x0 = xX[15];
	x1 = xX[47];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[15] = x0;
	xX[47] = x1;
	packed_tf = twiddles[16];
	x0 = xX[16];
	x1 = xX[48];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[16] = x0;
	xX[48] = x1;
	packed_tf = twiddles[17];
	x0 = xX[17];
	x1 = xX[49];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[49] = x1;
	packed_tf = twiddles[18];
	x0 = xX[18];
	x1 = xX[50];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[18] = x0;
	xX[50] = x1;
	packed_tf = twiddles[19];
	x0 = xX[19];
	x1 = xX[51];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[19] = x0;
	xX[51] = x1;
	packed_tf = twiddles[20];
	x0 = xX[20];
	x1 = xX[52];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[20] = x0;
	xX[52] = x1;
	packed_tf = twiddles[21];
	x0 = xX[21];
	x1 = xX[53];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[21] = x0;
	xX[53] = x1;
	packed_tf = twiddles[22];
	x0 = xX[22];
	x1 = xX[54];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[22] = x0;
	xX[54] = x1;
	packed_tf = twiddles[23];
	x0 = xX[23];
	x1 = xX[55];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[23] = x0;
	xX[55] = x1;
	packed_tf = twiddles[24];
	x0 = xX[24];
	x1 = xX[56];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[24] = x0;
	xX[56] = x1;
	packed_tf = twiddles[25];
	x0 = xX[25];
	x1 = xX[57];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[25] = x0;
	xX[57] = x1;
	packed_tf = twiddles[26];
	x0 = xX[26];
	x1 = xX[58];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[26] = x0;
	xX[58] = x1;
	packed_tf = twiddles[27];
	x0 = xX[27];
	x1 = xX[59];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[27] = x0;
	xX[59] = x1;
	packed_tf = twiddles[28];
	x0 = xX[28];
	x1 = xX[60];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[28] = x0;
	xX[60] = x1;
	packed_tf = twiddles[29];
	x0 = xX[29];
	x1 = xX[61];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[29] = x0;
	xX[61] = x1;
	packed_tf = twiddles[30];
	x0 = xX[30];
	x1 = xX[62];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[30] = x0;
	xX[62] = x1;
	packed_tf = twiddles[31];
	x0 = xX[31];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[31] = x0;
	xX[63] = x1;
}

// Protype to shut up compiler
void radix2_int32cplx_fft_128(Int32Cplx* xX, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N);

void radix2_int32cplx_fft_128(Int32Cplx* xX, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N)
{
	bro_with_lookup(xX, interleaved_bro_lookup, bro_N);
	Int32Cplx x0, x1;
	int packed_tf;
	x0 = xX[0];
	x1 = xX[1];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[1] = x1;
	x0 = xX[2];
	x1 = xX[3];
	Radix2Int1Butterfly(x0, x1);
	xX[2] = x0;
	xX[3] = x1;
	x0 = xX[4];
	x1 = xX[5];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[5] = x1;
	x0 = xX[6];
	x1 = xX[7];
	Radix2Int1Butterfly(x0, x1);
	xX[6] = x0;
	xX[7] = x1;
	x0 = xX[8];
	x1 = xX[9];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[9] = x1;
	x0 = xX[10];
	x1 = xX[11];
	Radix2Int1Butterfly(x0, x1);
	xX[10] = x0;
	xX[11] = x1;
	x0 = xX[12];
	x1 = xX[13];
	Radix2Int1Butterfly(x0, x1);
	xX[12] = x0;
	xX[13] = x1;
	x0 = xX[14];
	x1 = xX[15];
	Radix2Int1Butterfly(x0, x1);
	xX[14] = x0;
	xX[15] = x1;
	x0 = xX[16];
	x1 = xX[17];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[17] = x1;
	x0 = xX[18];
	x1 = xX[19];
	Radix2Int1Butterfly(x0, x1);
	xX[18] = x0;
	xX[19] = x1;
	x0 = xX[20];
	x1 = xX[21];
	Radix2Int1Butterfly(x0, x1);
	xX[20] = x0;
	xX[21] = x1;
	x0 = xX[22];
	x1 = xX[23];
	Radix2Int1Butterfly(x0, x1);
	xX[22] = x0;
	xX[23] = x1;
	x0 = xX[24];
	x1 = xX[25];
	Radix2Int1Butterfly(x0, x1);
	xX[24] = x0;
	xX[25] = x1;
	x0 = xX[26];
	x1 = xX[27];
	Radix2Int1Butterfly(x0, x1);
	xX[26] = x0;
	xX[27] = x1;
	x0 = xX[28];
	x1 = xX[29];
	Radix2Int1Butterfly(x0, x1);
	xX[28] = x0;
	xX[29] = x1;
	x0 = xX[30];
	x1 = xX[31];
	Radix2Int1Butterfly(x0, x1);
	xX[30] = x0;
	xX[31] = x1;
	x0 = xX[32];
	x1 = xX[33];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[33] = x1;
	x0 = xX[34];
	x1 = xX[35];
	Radix2Int1Butterfly(x0, x1);
	xX[34] = x0;
	xX[35] = x1;
	x0 = xX[36];
	x1 = xX[37];
	Radix2Int1Butterfly(x0, x1);
	xX[36] = x0;
	xX[37] = x1;
	x0 = xX[38];
	x1 = xX[39];
	Radix2Int1Butterfly(x0, x1);
	xX[38] = x0;
	xX[39] = x1;
	x0 = xX[40];
	x1 = xX[41];
	Radix2Int1Butterfly(x0, x1);
	xX[40] = x0;
	xX[41] = x1;
	x0 = xX[42];
	x1 = xX[43];
	Radix2Int1Butterfly(x0, x1);
	xX[42] = x0;
	xX[43] = x1;
	x0 = xX[44];
	x1 = xX[45];
	Radix2Int1Butterfly(x0, x1);
	xX[44] = x0;
	xX[45] = x1;
	x0 = xX[46];
	x1 = xX[47];
	Radix2Int1Butterfly(x0, x1);
	xX[46] = x0;
	xX[47] = x1;
	x0 = xX[48];
	x1 = xX[49];
	Radix2Int1Butterfly(x0, x1);
	xX[48] = x0;
	xX[49] = x1;
	x0 = xX[50];
	x1 = xX[51];
	Radix2Int1Butterfly(x0, x1);
	xX[50] = x0;
	xX[51] = x1;
	x0 = xX[52];
	x1 = xX[53];
	Radix2Int1Butterfly(x0, x1);
	xX[52] = x0;
	xX[53] = x1;
	x0 = xX[54];
	x1 = xX[55];
	Radix2Int1Butterfly(x0, x1);
	xX[54] = x0;
	xX[55] = x1;
	x0 = xX[56];
	x1 = xX[57];
	Radix2Int1Butterfly(x0, x1);
	xX[56] = x0;
	xX[57] = x1;
	x0 = xX[58];
	x1 = xX[59];
	Radix2Int1Butterfly(x0, x1);
	xX[58] = x0;
	xX[59] = x1;
	x0 = xX[60];
	x1 = xX[61];
	Radix2Int1Butterfly(x0, x1);
	xX[60] = x0;
	xX[61] = x1;
	x0 = xX[62];
	x1 = xX[63];
	Radix2Int1Butterfly(x0, x1);
	xX[62] = x0;
	xX[63] = x1;
	x0 = xX[64];
	x1 = xX[65];
	Radix2Int1Butterfly(x0, x1);
	xX[64] = x0;
	xX[65] = x1;
	x0 = xX[66];
	x1 = xX[67];
	Radix2Int1Butterfly(x0, x1);
	xX[66] = x0;
	xX[67] = x1;
	x0 = xX[68];
	x1 = xX[69];
	Radix2Int1Butterfly(x0, x1);
	xX[68] = x0;
	xX[69] = x1;
	x0 = xX[70];
	x1 = xX[71];
	Radix2Int1Butterfly(x0, x1);
	xX[70] = x0;
	xX[71] = x1;
	x0 = xX[72];
	x1 = xX[73];
	Radix2Int1Butterfly(x0, x1);
	xX[72] = x0;
	xX[73] = x1;
	x0 = xX[74];
	x1 = xX[75];
	Radix2Int1Butterfly(x0, x1);
	xX[74] = x0;
	xX[75] = x1;
	x0 = xX[76];
	x1 = xX[77];
	Radix2Int1Butterfly(x0, x1);
	xX[76] = x0;
	xX[77] = x1;
	x0 = xX[78];
	x1 = xX[79];
	Radix2Int1Butterfly(x0, x1);
	xX[78] = x0;
	xX[79] = x1;
	x0 = xX[80];
	x1 = xX[81];
	Radix2Int1Butterfly(x0, x1);
	xX[80] = x0;
	xX[81] = x1;
	x0 = xX[82];
	x1 = xX[83];
	Radix2Int1Butterfly(x0, x1);
	xX[82] = x0;
	xX[83] = x1;
	x0 = xX[84];
	x1 = xX[85];
	Radix2Int1Butterfly(x0, x1);
	xX[84] = x0;
	xX[85] = x1;
	x0 = xX[86];
	x1 = xX[87];
	Radix2Int1Butterfly(x0, x1);
	xX[86] = x0;
	xX[87] = x1;
	x0 = xX[88];
	x1 = xX[89];
	Radix2Int1Butterfly(x0, x1);
	xX[88] = x0;
	xX[89] = x1;
	x0 = xX[90];
	x1 = xX[91];
	Radix2Int1Butterfly(x0, x1);
	xX[90] = x0;
	xX[91] = x1;
	x0 = xX[92];
	x1 = xX[93];
	Radix2Int1Butterfly(x0, x1);
	xX[92] = x0;
	xX[93] = x1;
	x0 = xX[94];
	x1 = xX[95];
	Radix2Int1Butterfly(x0, x1);
	xX[94] = x0;
	xX[95] = x1;
	x0 = xX[96];
	x1 = xX[97];
	Radix2Int1Butterfly(x0, x1);
	xX[96] = x0;
	xX[97] = x1;
	x0 = xX[98];
	x1 = xX[99];
	Radix2Int1Butterfly(x0, x1);
	xX[98] = x0;
	xX[99] = x1;
	x0 = xX[100];
	x1 = xX[101];
	Radix2Int1Butterfly(x0, x1);
	xX[100] = x0;
	xX[101] = x1;
	x0 = xX[102];
	x1 = xX[103];
	Radix2Int1Butterfly(x0, x1);
	xX[102] = x0;
	xX[103] = x1;
	x0 = xX[104];
	x1 = xX[105];
	Radix2Int1Butterfly(x0, x1);
	xX[104] = x0;
	xX[105] = x1;
	x0 = xX[106];
	x1 = xX[107];
	Radix2Int1Butterfly(x0, x1);
	xX[106] = x0;
	xX[107] = x1;
	x0 = xX[108];
	x1 = xX[109];
	Radix2Int1Butterfly(x0, x1);
	xX[108] = x0;
	xX[109] = x1;
	x0 = xX[110];
	x1 = xX[111];
	Radix2Int1Butterfly(x0, x1);
	xX[110] = x0;
	xX[111] = x1;
	x0 = xX[112];
	x1 = xX[113];
	Radix2Int1Butterfly(x0, x1);
	xX[112] = x0;
	xX[113] = x1;
	x0 = xX[114];
	x1 = xX[115];
	Radix2Int1Butterfly(x0, x1);
	xX[114] = x0;
	xX[115] = x1;
	x0 = xX[116];
	x1 = xX[117];
	Radix2Int1Butterfly(x0, x1);
	xX[116] = x0;
	xX[117] = x1;
	x0 = xX[118];
	x1 = xX[119];
	Radix2Int1Butterfly(x0, x1);
	xX[118] = x0;
	xX[119] = x1;
	x0 = xX[120];
	x1 = xX[121];
	Radix2Int1Butterfly(x0, x1);
	xX[120] = x0;
	xX[121] = x1;
	x0 = xX[122];
	x1 = xX[123];
	Radix2Int1Butterfly(x0, x1);
	xX[122] = x0;
	xX[123] = x1;
	x0 = xX[124];
	x1 = xX[125];
	Radix2Int1Butterfly(x0, x1);
	xX[124] = x0;
	xX[125] = x1;
	x0 = xX[126];
	x1 = xX[127];
	Radix2Int1Butterfly(x0, x1);
	xX[126] = x0;
	xX[127] = x1;
	x0 = xX[0];
	x1 = xX[2];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[2] = x1;
	x0 = xX[4];
	x1 = xX[6];
	Radix2Int1Butterfly(x0, x1);
	xX[4] = x0;
	xX[6] = x1;
	x0 = xX[8];
	x1 = xX[10];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[10] = x1;
	x0 = xX[12];
	x1 = xX[14];
	Radix2Int1Butterfly(x0, x1);
	xX[12] = x0;
	xX[14] = x1;
	x0 = xX[16];
	x1 = xX[18];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[18] = x1;
	x0 = xX[20];
	x1 = xX[22];
	Radix2Int1Butterfly(x0, x1);
	xX[20] = x0;
	xX[22] = x1;
	x0 = xX[24];
	x1 = xX[26];
	Radix2Int1Butterfly(x0, x1);
	xX[24] = x0;
	xX[26] = x1;
	x0 = xX[28];
	x1 = xX[30];
	Radix2Int1Butterfly(x0, x1);
	xX[28] = x0;
	xX[30] = x1;
	x0 = xX[32];
	x1 = xX[34];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[34] = x1;
	x0 = xX[36];
	x1 = xX[38];
	Radix2Int1Butterfly(x0, x1);
	xX[36] = x0;
	xX[38] = x1;
	x0 = xX[40];
	x1 = xX[42];
	Radix2Int1Butterfly(x0, x1);
	xX[40] = x0;
	xX[42] = x1;
	x0 = xX[44];
	x1 = xX[46];
	Radix2Int1Butterfly(x0, x1);
	xX[44] = x0;
	xX[46] = x1;
	x0 = xX[48];
	x1 = xX[50];
	Radix2Int1Butterfly(x0, x1);
	xX[48] = x0;
	xX[50] = x1;
	x0 = xX[52];
	x1 = xX[54];
	Radix2Int1Butterfly(x0, x1);
	xX[52] = x0;
	xX[54] = x1;
	x0 = xX[56];
	x1 = xX[58];
	Radix2Int1Butterfly(x0, x1);
	xX[56] = x0;
	xX[58] = x1;
	x0 = xX[60];
	x1 = xX[62];
	Radix2Int1Butterfly(x0, x1);
	xX[60] = x0;
	xX[62] = x1;
	x0 = xX[64];
	x1 = xX[66];
	Radix2Int1Butterfly(x0, x1);
	xX[64] = x0;
	xX[66] = x1;
	x0 = xX[68];
	x1 = xX[70];
	Radix2Int1Butterfly(x0, x1);
	xX[68] = x0;
	xX[70] = x1;
	x0 = xX[72];
	x1 = xX[74];
	Radix2Int1Butterfly(x0, x1);
	xX[72] = x0;
	xX[74] = x1;
	x0 = xX[76];
	x1 = xX[78];
	Radix2Int1Butterfly(x0, x1);
	xX[76] = x0;
	xX[78] = x1;
	x0 = xX[80];
	x1 = xX[82];
	Radix2Int1Butterfly(x0, x1);
	xX[80] = x0;
	xX[82] = x1;
	x0 = xX[84];
	x1 = xX[86];
	Radix2Int1Butterfly(x0, x1);
	xX[84] = x0;
	xX[86] = x1;
	x0 = xX[88];
	x1 = xX[90];
	Radix2Int1Butterfly(x0, x1);
	xX[88] = x0;
	xX[90] = x1;
	x0 = xX[92];
	x1 = xX[94];
	Radix2Int1Butterfly(x0, x1);
	xX[92] = x0;
	xX[94] = x1;
	x0 = xX[96];
	x1 = xX[98];
	Radix2Int1Butterfly(x0, x1);
	xX[96] = x0;
	xX[98] = x1;
	x0 = xX[100];
	x1 = xX[102];
	Radix2Int1Butterfly(x0, x1);
	xX[100] = x0;
	xX[102] = x1;
	x0 = xX[104];
	x1 = xX[106];
	Radix2Int1Butterfly(x0, x1);
	xX[104] = x0;
	xX[106] = x1;
	x0 = xX[108];
	x1 = xX[110];
	Radix2Int1Butterfly(x0, x1);
	xX[108] = x0;
	xX[110] = x1;
	x0 = xX[112];
	x1 = xX[114];
	Radix2Int1Butterfly(x0, x1);
	xX[112] = x0;
	xX[114] = x1;
	x0 = xX[116];
	x1 = xX[118];
	Radix2Int1Butterfly(x0, x1);
	xX[116] = x0;
	xX[118] = x1;
	x0 = xX[120];
	x1 = xX[122];
	Radix2Int1Butterfly(x0, x1);
	xX[120] = x0;
	xX[122] = x1;
	x0 = xX[124];
	x1 = xX[126];
	Radix2Int1Butterfly(x0, x1);
	xX[124] = x0;
	xX[126] = x1;
	packed_tf = twiddles[32];
	x0 = xX[1];
	x1 = xX[3];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[3] = x1;
	x0 = xX[5];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[7] = x1;
	x0 = xX[9];
	x1 = xX[11];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[11] = x1;
	x0 = xX[13];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[15] = x1;
	x0 = xX[17];
	x1 = xX[19];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[19] = x1;
	x0 = xX[21];
	x1 = xX[23];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[21] = x0;
	xX[23] = x1;
	x0 = xX[25];
	x1 = xX[27];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[25] = x0;
	xX[27] = x1;
	x0 = xX[29];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[29] = x0;
	xX[31] = x1;
	x0 = xX[33];
	x1 = xX[35];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[33] = x0;
	xX[35] = x1;
	x0 = xX[37];
	x1 = xX[39];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[37] = x0;
	xX[39] = x1;
	x0 = xX[41];
	x1 = xX[43];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[41] = x0;
	xX[43] = x1;
	x0 = xX[45];
	x1 = xX[47];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[45] = x0;
	xX[47] = x1;
	x0 = xX[49];
	x1 = xX[51];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[49] = x0;
	xX[51] = x1;
	x0 = xX[53];
	x1 = xX[55];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[53] = x0;
	xX[55] = x1;
	x0 = xX[57];
	x1 = xX[59];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[57] = x0;
	xX[59] = x1;
	x0 = xX[61];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[61] = x0;
	xX[63] = x1;
	x0 = xX[65];
	x1 = xX[67];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[65] = x0;
	xX[67] = x1;
	x0 = xX[69];
	x1 = xX[71];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[69] = x0;
	xX[71] = x1;
	x0 = xX[73];
	x1 = xX[75];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[73] = x0;
	xX[75] = x1;
	x0 = xX[77];
	x1 = xX[79];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[77] = x0;
	xX[79] = x1;
	x0 = xX[81];
	x1 = xX[83];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[81] = x0;
	xX[83] = x1;
	x0 = xX[85];
	x1 = xX[87];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[85] = x0;
	xX[87] = x1;
	x0 = xX[89];
	x1 = xX[91];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[89] = x0;
	xX[91] = x1;
	x0 = xX[93];
	x1 = xX[95];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[93] = x0;
	xX[95] = x1;
	x0 = xX[97];
	x1 = xX[99];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[97] = x0;
	xX[99] = x1;
	x0 = xX[101];
	x1 = xX[103];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[101] = x0;
	xX[103] = x1;
	x0 = xX[105];
	x1 = xX[107];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[105] = x0;
	xX[107] = x1;
	x0 = xX[109];
	x1 = xX[111];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[109] = x0;
	xX[111] = x1;
	x0 = xX[113];
	x1 = xX[115];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[113] = x0;
	xX[115] = x1;
	x0 = xX[117];
	x1 = xX[119];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[117] = x0;
	xX[119] = x1;
	x0 = xX[121];
	x1 = xX[123];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[121] = x0;
	xX[123] = x1;
	x0 = xX[125];
	x1 = xX[127];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[125] = x0;
	xX[127] = x1;
	x0 = xX[0];
	x1 = xX[4];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[4] = x1;
	x0 = xX[8];
	x1 = xX[12];
	Radix2Int1Butterfly(x0, x1);
	xX[8] = x0;
	xX[12] = x1;
	x0 = xX[16];
	x1 = xX[20];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[20] = x1;
	x0 = xX[24];
	x1 = xX[28];
	Radix2Int1Butterfly(x0, x1);
	xX[24] = x0;
	xX[28] = x1;
	x0 = xX[32];
	x1 = xX[36];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[36] = x1;
	x0 = xX[40];
	x1 = xX[44];
	Radix2Int1Butterfly(x0, x1);
	xX[40] = x0;
	xX[44] = x1;
	x0 = xX[48];
	x1 = xX[52];
	Radix2Int1Butterfly(x0, x1);
	xX[48] = x0;
	xX[52] = x1;
	x0 = xX[56];
	x1 = xX[60];
	Radix2Int1Butterfly(x0, x1);
	xX[56] = x0;
	xX[60] = x1;
	x0 = xX[64];
	x1 = xX[68];
	Radix2Int1Butterfly(x0, x1);
	xX[64] = x0;
	xX[68] = x1;
	x0 = xX[72];
	x1 = xX[76];
	Radix2Int1Butterfly(x0, x1);
	xX[72] = x0;
	xX[76] = x1;
	x0 = xX[80];
	x1 = xX[84];
	Radix2Int1Butterfly(x0, x1);
	xX[80] = x0;
	xX[84] = x1;
	x0 = xX[88];
	x1 = xX[92];
	Radix2Int1Butterfly(x0, x1);
	xX[88] = x0;
	xX[92] = x1;
	x0 = xX[96];
	x1 = xX[100];
	Radix2Int1Butterfly(x0, x1);
	xX[96] = x0;
	xX[100] = x1;
	x0 = xX[104];
	x1 = xX[108];
	Radix2Int1Butterfly(x0, x1);
	xX[104] = x0;
	xX[108] = x1;
	x0 = xX[112];
	x1 = xX[116];
	Radix2Int1Butterfly(x0, x1);
	xX[112] = x0;
	xX[116] = x1;
	x0 = xX[120];
	x1 = xX[124];
	Radix2Int1Butterfly(x0, x1);
	xX[120] = x0;
	xX[124] = x1;
	packed_tf = twiddles[16];
	x0 = xX[1];
	x1 = xX[5];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[5] = x1;
	x0 = xX[9];
	x1 = xX[13];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[13] = x1;
	x0 = xX[17];
	x1 = xX[21];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[21] = x1;
	x0 = xX[25];
	x1 = xX[29];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[25] = x0;
	xX[29] = x1;
	x0 = xX[33];
	x1 = xX[37];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[33] = x0;
	xX[37] = x1;
	x0 = xX[41];
	x1 = xX[45];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[41] = x0;
	xX[45] = x1;
	x0 = xX[49];
	x1 = xX[53];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[49] = x0;
	xX[53] = x1;
	x0 = xX[57];
	x1 = xX[61];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[57] = x0;
	xX[61] = x1;
	x0 = xX[65];
	x1 = xX[69];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[65] = x0;
	xX[69] = x1;
	x0 = xX[73];
	x1 = xX[77];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[73] = x0;
	xX[77] = x1;
	x0 = xX[81];
	x1 = xX[85];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[81] = x0;
	xX[85] = x1;
	x0 = xX[89];
	x1 = xX[93];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[89] = x0;
	xX[93] = x1;
	x0 = xX[97];
	x1 = xX[101];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[97] = x0;
	xX[101] = x1;
	x0 = xX[105];
	x1 = xX[109];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[105] = x0;
	xX[109] = x1;
	x0 = xX[113];
	x1 = xX[117];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[113] = x0;
	xX[117] = x1;
	x0 = xX[121];
	x1 = xX[125];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[121] = x0;
	xX[125] = x1;
	packed_tf = twiddles[32];
	x0 = xX[2];
	x1 = xX[6];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[6] = x1;
	x0 = xX[10];
	x1 = xX[14];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[14] = x1;
	x0 = xX[18];
	x1 = xX[22];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[18] = x0;
	xX[22] = x1;
	x0 = xX[26];
	x1 = xX[30];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[26] = x0;
	xX[30] = x1;
	x0 = xX[34];
	x1 = xX[38];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[34] = x0;
	xX[38] = x1;
	x0 = xX[42];
	x1 = xX[46];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[42] = x0;
	xX[46] = x1;
	x0 = xX[50];
	x1 = xX[54];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[50] = x0;
	xX[54] = x1;
	x0 = xX[58];
	x1 = xX[62];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[58] = x0;
	xX[62] = x1;
	x0 = xX[66];
	x1 = xX[70];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[66] = x0;
	xX[70] = x1;
	x0 = xX[74];
	x1 = xX[78];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[74] = x0;
	xX[78] = x1;
	x0 = xX[82];
	x1 = xX[86];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[82] = x0;
	xX[86] = x1;
	x0 = xX[90];
	x1 = xX[94];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[90] = x0;
	xX[94] = x1;
	x0 = xX[98];
	x1 = xX[102];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[98] = x0;
	xX[102] = x1;
	x0 = xX[106];
	x1 = xX[110];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[106] = x0;
	xX[110] = x1;
	x0 = xX[114];
	x1 = xX[118];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[114] = x0;
	xX[118] = x1;
	x0 = xX[122];
	x1 = xX[126];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[122] = x0;
	xX[126] = x1;
	packed_tf = twiddles[48];
	x0 = xX[3];
	x1 = xX[7];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[7] = x1;
	x0 = xX[11];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[15] = x1;
	x0 = xX[19];
	x1 = xX[23];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[19] = x0;
	xX[23] = x1;
	x0 = xX[27];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[27] = x0;
	xX[31] = x1;
	x0 = xX[35];
	x1 = xX[39];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[35] = x0;
	xX[39] = x1;
	x0 = xX[43];
	x1 = xX[47];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[43] = x0;
	xX[47] = x1;
	x0 = xX[51];
	x1 = xX[55];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[51] = x0;
	xX[55] = x1;
	x0 = xX[59];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[59] = x0;
	xX[63] = x1;
	x0 = xX[67];
	x1 = xX[71];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[67] = x0;
	xX[71] = x1;
	x0 = xX[75];
	x1 = xX[79];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[75] = x0;
	xX[79] = x1;
	x0 = xX[83];
	x1 = xX[87];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[83] = x0;
	xX[87] = x1;
	x0 = xX[91];
	x1 = xX[95];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[91] = x0;
	xX[95] = x1;
	x0 = xX[99];
	x1 = xX[103];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[99] = x0;
	xX[103] = x1;
	x0 = xX[107];
	x1 = xX[111];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[107] = x0;
	xX[111] = x1;
	x0 = xX[115];
	x1 = xX[119];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[115] = x0;
	xX[119] = x1;
	x0 = xX[123];
	x1 = xX[127];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[123] = x0;
	xX[127] = x1;
	x0 = xX[0];
	x1 = xX[8];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[8] = x1;
	x0 = xX[16];
	x1 = xX[24];
	Radix2Int1Butterfly(x0, x1);
	xX[16] = x0;
	xX[24] = x1;
	x0 = xX[32];
	x1 = xX[40];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[40] = x1;
	x0 = xX[48];
	x1 = xX[56];
	Radix2Int1Butterfly(x0, x1);
	xX[48] = x0;
	xX[56] = x1;
	x0 = xX[64];
	x1 = xX[72];
	Radix2Int1Butterfly(x0, x1);
	xX[64] = x0;
	xX[72] = x1;
	x0 = xX[80];
	x1 = xX[88];
	Radix2Int1Butterfly(x0, x1);
	xX[80] = x0;
	xX[88] = x1;
	x0 = xX[96];
	x1 = xX[104];
	Radix2Int1Butterfly(x0, x1);
	xX[96] = x0;
	xX[104] = x1;
	x0 = xX[112];
	x1 = xX[120];
	Radix2Int1Butterfly(x0, x1);
	xX[112] = x0;
	xX[120] = x1;
	packed_tf = twiddles[8];
	x0 = xX[1];
	x1 = xX[9];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[9] = x1;
	x0 = xX[17];
	x1 = xX[25];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[25] = x1;
	x0 = xX[33];
	x1 = xX[41];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[33] = x0;
	xX[41] = x1;
	x0 = xX[49];
	x1 = xX[57];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[49] = x0;
	xX[57] = x1;
	x0 = xX[65];
	x1 = xX[73];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[65] = x0;
	xX[73] = x1;
	x0 = xX[81];
	x1 = xX[89];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[81] = x0;
	xX[89] = x1;
	x0 = xX[97];
	x1 = xX[105];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[97] = x0;
	xX[105] = x1;
	x0 = xX[113];
	x1 = xX[121];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[113] = x0;
	xX[121] = x1;
	packed_tf = twiddles[16];
	x0 = xX[2];
	x1 = xX[10];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[10] = x1;
	x0 = xX[18];
	x1 = xX[26];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[18] = x0;
	xX[26] = x1;
	x0 = xX[34];
	x1 = xX[42];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[34] = x0;
	xX[42] = x1;
	x0 = xX[50];
	x1 = xX[58];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[50] = x0;
	xX[58] = x1;
	x0 = xX[66];
	x1 = xX[74];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[66] = x0;
	xX[74] = x1;
	x0 = xX[82];
	x1 = xX[90];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[82] = x0;
	xX[90] = x1;
	x0 = xX[98];
	x1 = xX[106];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[98] = x0;
	xX[106] = x1;
	x0 = xX[114];
	x1 = xX[122];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[114] = x0;
	xX[122] = x1;
	packed_tf = twiddles[24];
	x0 = xX[3];
	x1 = xX[11];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[11] = x1;
	x0 = xX[19];
	x1 = xX[27];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[19] = x0;
	xX[27] = x1;
	x0 = xX[35];
	x1 = xX[43];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[35] = x0;
	xX[43] = x1;
	x0 = xX[51];
	x1 = xX[59];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[51] = x0;
	xX[59] = x1;
	x0 = xX[67];
	x1 = xX[75];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[67] = x0;
	xX[75] = x1;
	x0 = xX[83];
	x1 = xX[91];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[83] = x0;
	xX[91] = x1;
	x0 = xX[99];
	x1 = xX[107];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[99] = x0;
	xX[107] = x1;
	x0 = xX[115];
	x1 = xX[123];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[115] = x0;
	xX[123] = x1;
	packed_tf = twiddles[32];
	x0 = xX[4];
	x1 = xX[12];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[12] = x1;
	x0 = xX[20];
	x1 = xX[28];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[20] = x0;
	xX[28] = x1;
	x0 = xX[36];
	x1 = xX[44];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[36] = x0;
	xX[44] = x1;
	x0 = xX[52];
	x1 = xX[60];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[52] = x0;
	xX[60] = x1;
	x0 = xX[68];
	x1 = xX[76];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[68] = x0;
	xX[76] = x1;
	x0 = xX[84];
	x1 = xX[92];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[84] = x0;
	xX[92] = x1;
	x0 = xX[100];
	x1 = xX[108];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[100] = x0;
	xX[108] = x1;
	x0 = xX[116];
	x1 = xX[124];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[116] = x0;
	xX[124] = x1;
	packed_tf = twiddles[40];
	x0 = xX[5];
	x1 = xX[13];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[13] = x1;
	x0 = xX[21];
	x1 = xX[29];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[21] = x0;
	xX[29] = x1;
	x0 = xX[37];
	x1 = xX[45];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[37] = x0;
	xX[45] = x1;
	x0 = xX[53];
	x1 = xX[61];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[53] = x0;
	xX[61] = x1;
	x0 = xX[69];
	x1 = xX[77];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[69] = x0;
	xX[77] = x1;
	x0 = xX[85];
	x1 = xX[93];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[85] = x0;
	xX[93] = x1;
	x0 = xX[101];
	x1 = xX[109];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[101] = x0;
	xX[109] = x1;
	x0 = xX[117];
	x1 = xX[125];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[117] = x0;
	xX[125] = x1;
	packed_tf = twiddles[48];
	x0 = xX[6];
	x1 = xX[14];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[14] = x1;
	x0 = xX[22];
	x1 = xX[30];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[22] = x0;
	xX[30] = x1;
	x0 = xX[38];
	x1 = xX[46];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[38] = x0;
	xX[46] = x1;
	x0 = xX[54];
	x1 = xX[62];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[54] = x0;
	xX[62] = x1;
	x0 = xX[70];
	x1 = xX[78];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[70] = x0;
	xX[78] = x1;
	x0 = xX[86];
	x1 = xX[94];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[86] = x0;
	xX[94] = x1;
	x0 = xX[102];
	x1 = xX[110];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[102] = x0;
	xX[110] = x1;
	x0 = xX[118];
	x1 = xX[126];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[118] = x0;
	xX[126] = x1;
	packed_tf = twiddles[56];
	x0 = xX[7];
	x1 = xX[15];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[15] = x1;
	x0 = xX[23];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[23] = x0;
	xX[31] = x1;
	x0 = xX[39];
	x1 = xX[47];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[39] = x0;
	xX[47] = x1;
	x0 = xX[55];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[55] = x0;
	xX[63] = x1;
	x0 = xX[71];
	x1 = xX[79];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[71] = x0;
	xX[79] = x1;
	x0 = xX[87];
	x1 = xX[95];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[87] = x0;
	xX[95] = x1;
	x0 = xX[103];
	x1 = xX[111];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[103] = x0;
	xX[111] = x1;
	x0 = xX[119];
	x1 = xX[127];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[119] = x0;
	xX[127] = x1;
	x0 = xX[0];
	x1 = xX[16];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[16] = x1;
	x0 = xX[32];
	x1 = xX[48];
	Radix2Int1Butterfly(x0, x1);
	xX[32] = x0;
	xX[48] = x1;
	x0 = xX[64];
	x1 = xX[80];
	Radix2Int1Butterfly(x0, x1);
	xX[64] = x0;
	xX[80] = x1;
	x0 = xX[96];
	x1 = xX[112];
	Radix2Int1Butterfly(x0, x1);
	xX[96] = x0;
	xX[112] = x1;
	packed_tf = twiddles[4];
	x0 = xX[1];
	x1 = xX[17];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[17] = x1;
	x0 = xX[33];
	x1 = xX[49];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[33] = x0;
	xX[49] = x1;
	x0 = xX[65];
	x1 = xX[81];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[65] = x0;
	xX[81] = x1;
	x0 = xX[97];
	x1 = xX[113];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[97] = x0;
	xX[113] = x1;
	packed_tf = twiddles[8];
	x0 = xX[2];
	x1 = xX[18];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[18] = x1;
	x0 = xX[34];
	x1 = xX[50];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[34] = x0;
	xX[50] = x1;
	x0 = xX[66];
	x1 = xX[82];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[66] = x0;
	xX[82] = x1;
	x0 = xX[98];
	x1 = xX[114];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[98] = x0;
	xX[114] = x1;
	packed_tf = twiddles[12];
	x0 = xX[3];
	x1 = xX[19];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[19] = x1;
	x0 = xX[35];
	x1 = xX[51];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[35] = x0;
	xX[51] = x1;
	x0 = xX[67];
	x1 = xX[83];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[67] = x0;
	xX[83] = x1;
	x0 = xX[99];
	x1 = xX[115];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[99] = x0;
	xX[115] = x1;
	packed_tf = twiddles[16];
	x0 = xX[4];
	x1 = xX[20];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[20] = x1;
	x0 = xX[36];
	x1 = xX[52];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[36] = x0;
	xX[52] = x1;
	x0 = xX[68];
	x1 = xX[84];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[68] = x0;
	xX[84] = x1;
	x0 = xX[100];
	x1 = xX[116];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[100] = x0;
	xX[116] = x1;
	packed_tf = twiddles[20];
	x0 = xX[5];
	x1 = xX[21];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[21] = x1;
	x0 = xX[37];
	x1 = xX[53];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[37] = x0;
	xX[53] = x1;
	x0 = xX[69];
	x1 = xX[85];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[69] = x0;
	xX[85] = x1;
	x0 = xX[101];
	x1 = xX[117];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[101] = x0;
	xX[117] = x1;
	packed_tf = twiddles[24];
	x0 = xX[6];
	x1 = xX[22];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[22] = x1;
	x0 = xX[38];
	x1 = xX[54];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[38] = x0;
	xX[54] = x1;
	x0 = xX[70];
	x1 = xX[86];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[70] = x0;
	xX[86] = x1;
	x0 = xX[102];
	x1 = xX[118];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[102] = x0;
	xX[118] = x1;
	packed_tf = twiddles[28];
	x0 = xX[7];
	x1 = xX[23];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[23] = x1;
	x0 = xX[39];
	x1 = xX[55];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[39] = x0;
	xX[55] = x1;
	x0 = xX[71];
	x1 = xX[87];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[71] = x0;
	xX[87] = x1;
	x0 = xX[103];
	x1 = xX[119];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[103] = x0;
	xX[119] = x1;
	packed_tf = twiddles[32];
	x0 = xX[8];
	x1 = xX[24];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[8] = x0;
	xX[24] = x1;
	x0 = xX[40];
	x1 = xX[56];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[40] = x0;
	xX[56] = x1;
	x0 = xX[72];
	x1 = xX[88];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[72] = x0;
	xX[88] = x1;
	x0 = xX[104];
	x1 = xX[120];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[104] = x0;
	xX[120] = x1;
	packed_tf = twiddles[36];
	x0 = xX[9];
	x1 = xX[25];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[25] = x1;
	x0 = xX[41];
	x1 = xX[57];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[41] = x0;
	xX[57] = x1;
	x0 = xX[73];
	x1 = xX[89];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[73] = x0;
	xX[89] = x1;
	x0 = xX[105];
	x1 = xX[121];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[105] = x0;
	xX[121] = x1;
	packed_tf = twiddles[40];
	x0 = xX[10];
	x1 = xX[26];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[26] = x1;
	x0 = xX[42];
	x1 = xX[58];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[42] = x0;
	xX[58] = x1;
	x0 = xX[74];
	x1 = xX[90];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[74] = x0;
	xX[90] = x1;
	x0 = xX[106];
	x1 = xX[122];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[106] = x0;
	xX[122] = x1;
	packed_tf = twiddles[44];
	x0 = xX[11];
	x1 = xX[27];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[27] = x1;
	x0 = xX[43];
	x1 = xX[59];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[43] = x0;
	xX[59] = x1;
	x0 = xX[75];
	x1 = xX[91];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[75] = x0;
	xX[91] = x1;
	x0 = xX[107];
	x1 = xX[123];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[107] = x0;
	xX[123] = x1;
	packed_tf = twiddles[48];
	x0 = xX[12];
	x1 = xX[28];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[12] = x0;
	xX[28] = x1;
	x0 = xX[44];
	x1 = xX[60];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[44] = x0;
	xX[60] = x1;
	x0 = xX[76];
	x1 = xX[92];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[76] = x0;
	xX[92] = x1;
	x0 = xX[108];
	x1 = xX[124];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[108] = x0;
	xX[124] = x1;
	packed_tf = twiddles[52];
	x0 = xX[13];
	x1 = xX[29];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[29] = x1;
	x0 = xX[45];
	x1 = xX[61];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[45] = x0;
	xX[61] = x1;
	x0 = xX[77];
	x1 = xX[93];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[77] = x0;
	xX[93] = x1;
	x0 = xX[109];
	x1 = xX[125];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[109] = x0;
	xX[125] = x1;
	packed_tf = twiddles[56];
	x0 = xX[14];
	x1 = xX[30];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[14] = x0;
	xX[30] = x1;
	x0 = xX[46];
	x1 = xX[62];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[46] = x0;
	xX[62] = x1;
	x0 = xX[78];
	x1 = xX[94];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[78] = x0;
	xX[94] = x1;
	x0 = xX[110];
	x1 = xX[126];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[110] = x0;
	xX[126] = x1;
	packed_tf = twiddles[60];
	x0 = xX[15];
	x1 = xX[31];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[15] = x0;
	xX[31] = x1;
	x0 = xX[47];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[47] = x0;
	xX[63] = x1;
	x0 = xX[79];
	x1 = xX[95];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[79] = x0;
	xX[95] = x1;
	x0 = xX[111];
	x1 = xX[127];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[111] = x0;
	xX[127] = x1;
	x0 = xX[0];
	x1 = xX[32];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[32] = x1;
	x0 = xX[64];
	x1 = xX[96];
	Radix2Int1Butterfly(x0, x1);
	xX[64] = x0;
	xX[96] = x1;
	packed_tf = twiddles[2];
	x0 = xX[1];
	x1 = xX[33];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[33] = x1;
	x0 = xX[65];
	x1 = xX[97];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[65] = x0;
	xX[97] = x1;
	packed_tf = twiddles[4];
	x0 = xX[2];
	x1 = xX[34];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[34] = x1;
	x0 = xX[66];
	x1 = xX[98];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[66] = x0;
	xX[98] = x1;
	packed_tf = twiddles[6];
	x0 = xX[3];
	x1 = xX[35];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[35] = x1;
	x0 = xX[67];
	x1 = xX[99];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[67] = x0;
	xX[99] = x1;
	packed_tf = twiddles[8];
	x0 = xX[4];
	x1 = xX[36];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[36] = x1;
	x0 = xX[68];
	x1 = xX[100];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[68] = x0;
	xX[100] = x1;
	packed_tf = twiddles[10];
	x0 = xX[5];
	x1 = xX[37];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[37] = x1;
	x0 = xX[69];
	x1 = xX[101];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[69] = x0;
	xX[101] = x1;
	packed_tf = twiddles[12];
	x0 = xX[6];
	x1 = xX[38];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[38] = x1;
	x0 = xX[70];
	x1 = xX[102];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[70] = x0;
	xX[102] = x1;
	packed_tf = twiddles[14];
	x0 = xX[7];
	x1 = xX[39];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[39] = x1;
	x0 = xX[71];
	x1 = xX[103];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[71] = x0;
	xX[103] = x1;
	packed_tf = twiddles[16];
	x0 = xX[8];
	x1 = xX[40];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[8] = x0;
	xX[40] = x1;
	x0 = xX[72];
	x1 = xX[104];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[72] = x0;
	xX[104] = x1;
	packed_tf = twiddles[18];
	x0 = xX[9];
	x1 = xX[41];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[41] = x1;
	x0 = xX[73];
	x1 = xX[105];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[73] = x0;
	xX[105] = x1;
	packed_tf = twiddles[20];
	x0 = xX[10];
	x1 = xX[42];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[42] = x1;
	x0 = xX[74];
	x1 = xX[106];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[74] = x0;
	xX[106] = x1;
	packed_tf = twiddles[22];
	x0 = xX[11];
	x1 = xX[43];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[43] = x1;
	x0 = xX[75];
	x1 = xX[107];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[75] = x0;
	xX[107] = x1;
	packed_tf = twiddles[24];
	x0 = xX[12];
	x1 = xX[44];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[12] = x0;
	xX[44] = x1;
	x0 = xX[76];
	x1 = xX[108];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[76] = x0;
	xX[108] = x1;
	packed_tf = twiddles[26];
	x0 = xX[13];
	x1 = xX[45];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[45] = x1;
	x0 = xX[77];
	x1 = xX[109];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[77] = x0;
	xX[109] = x1;
	packed_tf = twiddles[28];
	x0 = xX[14];
	x1 = xX[46];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[14] = x0;
	xX[46] = x1;
	x0 = xX[78];
	x1 = xX[110];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[78] = x0;
	xX[110] = x1;
	packed_tf = twiddles[30];
	x0 = xX[15];
	x1 = xX[47];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[15] = x0;
	xX[47] = x1;
	x0 = xX[79];
	x1 = xX[111];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[79] = x0;
	xX[111] = x1;
	packed_tf = twiddles[32];
	x0 = xX[16];
	x1 = xX[48];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[16] = x0;
	xX[48] = x1;
	x0 = xX[80];
	x1 = xX[112];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[80] = x0;
	xX[112] = x1;
	packed_tf = twiddles[34];
	x0 = xX[17];
	x1 = xX[49];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[49] = x1;
	x0 = xX[81];
	x1 = xX[113];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[81] = x0;
	xX[113] = x1;
	packed_tf = twiddles[36];
	x0 = xX[18];
	x1 = xX[50];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[18] = x0;
	xX[50] = x1;
	x0 = xX[82];
	x1 = xX[114];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[82] = x0;
	xX[114] = x1;
	packed_tf = twiddles[38];
	x0 = xX[19];
	x1 = xX[51];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[19] = x0;
	xX[51] = x1;
	x0 = xX[83];
	x1 = xX[115];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[83] = x0;
	xX[115] = x1;
	packed_tf = twiddles[40];
	x0 = xX[20];
	x1 = xX[52];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[20] = x0;
	xX[52] = x1;
	x0 = xX[84];
	x1 = xX[116];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[84] = x0;
	xX[116] = x1;
	packed_tf = twiddles[42];
	x0 = xX[21];
	x1 = xX[53];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[21] = x0;
	xX[53] = x1;
	x0 = xX[85];
	x1 = xX[117];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[85] = x0;
	xX[117] = x1;
	packed_tf = twiddles[44];
	x0 = xX[22];
	x1 = xX[54];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[22] = x0;
	xX[54] = x1;
	x0 = xX[86];
	x1 = xX[118];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[86] = x0;
	xX[118] = x1;
	packed_tf = twiddles[46];
	x0 = xX[23];
	x1 = xX[55];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[23] = x0;
	xX[55] = x1;
	x0 = xX[87];
	x1 = xX[119];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[87] = x0;
	xX[119] = x1;
	packed_tf = twiddles[48];
	x0 = xX[24];
	x1 = xX[56];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[24] = x0;
	xX[56] = x1;
	x0 = xX[88];
	x1 = xX[120];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[88] = x0;
	xX[120] = x1;
	packed_tf = twiddles[50];
	x0 = xX[25];
	x1 = xX[57];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[25] = x0;
	xX[57] = x1;
	x0 = xX[89];
	x1 = xX[121];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[89] = x0;
	xX[121] = x1;
	packed_tf = twiddles[52];
	x0 = xX[26];
	x1 = xX[58];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[26] = x0;
	xX[58] = x1;
	x0 = xX[90];
	x1 = xX[122];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[90] = x0;
	xX[122] = x1;
	packed_tf = twiddles[54];
	x0 = xX[27];
	x1 = xX[59];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[27] = x0;
	xX[59] = x1;
	x0 = xX[91];
	x1 = xX[123];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[91] = x0;
	xX[123] = x1;
	packed_tf = twiddles[56];
	x0 = xX[28];
	x1 = xX[60];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[28] = x0;
	xX[60] = x1;
	x0 = xX[92];
	x1 = xX[124];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[92] = x0;
	xX[124] = x1;
	packed_tf = twiddles[58];
	x0 = xX[29];
	x1 = xX[61];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[29] = x0;
	xX[61] = x1;
	x0 = xX[93];
	x1 = xX[125];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[93] = x0;
	xX[125] = x1;
	packed_tf = twiddles[60];
	x0 = xX[30];
	x1 = xX[62];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[30] = x0;
	xX[62] = x1;
	x0 = xX[94];
	x1 = xX[126];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[94] = x0;
	xX[126] = x1;
	packed_tf = twiddles[62];
	x0 = xX[31];
	x1 = xX[63];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[31] = x0;
	xX[63] = x1;
	x0 = xX[95];
	x1 = xX[127];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[95] = x0;
	xX[127] = x1;
	x0 = xX[0];
	x1 = xX[64];
	Radix2Int1Butterfly(x0, x1);
	xX[0] = x0;
	xX[64] = x1;
	packed_tf = twiddles[1];
	x0 = xX[1];
	x1 = xX[65];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[1] = x0;
	xX[65] = x1;
	packed_tf = twiddles[2];
	x0 = xX[2];
	x1 = xX[66];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[2] = x0;
	xX[66] = x1;
	packed_tf = twiddles[3];
	x0 = xX[3];
	x1 = xX[67];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[3] = x0;
	xX[67] = x1;
	packed_tf = twiddles[4];
	x0 = xX[4];
	x1 = xX[68];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[4] = x0;
	xX[68] = x1;
	packed_tf = twiddles[5];
	x0 = xX[5];
	x1 = xX[69];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[5] = x0;
	xX[69] = x1;
	packed_tf = twiddles[6];
	x0 = xX[6];
	x1 = xX[70];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[6] = x0;
	xX[70] = x1;
	packed_tf = twiddles[7];
	x0 = xX[7];
	x1 = xX[71];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[7] = x0;
	xX[71] = x1;
	packed_tf = twiddles[8];
	x0 = xX[8];
	x1 = xX[72];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[8] = x0;
	xX[72] = x1;
	packed_tf = twiddles[9];
	x0 = xX[9];
	x1 = xX[73];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[9] = x0;
	xX[73] = x1;
	packed_tf = twiddles[10];
	x0 = xX[10];
	x1 = xX[74];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[10] = x0;
	xX[74] = x1;
	packed_tf = twiddles[11];
	x0 = xX[11];
	x1 = xX[75];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[11] = x0;
	xX[75] = x1;
	packed_tf = twiddles[12];
	x0 = xX[12];
	x1 = xX[76];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[12] = x0;
	xX[76] = x1;
	packed_tf = twiddles[13];
	x0 = xX[13];
	x1 = xX[77];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[13] = x0;
	xX[77] = x1;
	packed_tf = twiddles[14];
	x0 = xX[14];
	x1 = xX[78];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[14] = x0;
	xX[78] = x1;
	packed_tf = twiddles[15];
	x0 = xX[15];
	x1 = xX[79];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[15] = x0;
	xX[79] = x1;
	packed_tf = twiddles[16];
	x0 = xX[16];
	x1 = xX[80];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[16] = x0;
	xX[80] = x1;
	packed_tf = twiddles[17];
	x0 = xX[17];
	x1 = xX[81];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[17] = x0;
	xX[81] = x1;
	packed_tf = twiddles[18];
	x0 = xX[18];
	x1 = xX[82];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[18] = x0;
	xX[82] = x1;
	packed_tf = twiddles[19];
	x0 = xX[19];
	x1 = xX[83];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[19] = x0;
	xX[83] = x1;
	packed_tf = twiddles[20];
	x0 = xX[20];
	x1 = xX[84];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[20] = x0;
	xX[84] = x1;
	packed_tf = twiddles[21];
	x0 = xX[21];
	x1 = xX[85];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[21] = x0;
	xX[85] = x1;
	packed_tf = twiddles[22];
	x0 = xX[22];
	x1 = xX[86];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[22] = x0;
	xX[86] = x1;
	packed_tf = twiddles[23];
	x0 = xX[23];
	x1 = xX[87];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[23] = x0;
	xX[87] = x1;
	packed_tf = twiddles[24];
	x0 = xX[24];
	x1 = xX[88];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[24] = x0;
	xX[88] = x1;
	packed_tf = twiddles[25];
	x0 = xX[25];
	x1 = xX[89];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[25] = x0;
	xX[89] = x1;
	packed_tf = twiddles[26];
	x0 = xX[26];
	x1 = xX[90];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[26] = x0;
	xX[90] = x1;
	packed_tf = twiddles[27];
	x0 = xX[27];
	x1 = xX[91];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[27] = x0;
	xX[91] = x1;
	packed_tf = twiddles[28];
	x0 = xX[28];
	x1 = xX[92];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[28] = x0;
	xX[92] = x1;
	packed_tf = twiddles[29];
	x0 = xX[29];
	x1 = xX[93];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[29] = x0;
	xX[93] = x1;
	packed_tf = twiddles[30];
	x0 = xX[30];
	x1 = xX[94];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[30] = x0;
	xX[94] = x1;
	packed_tf = twiddles[31];
	x0 = xX[31];
	x1 = xX[95];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[31] = x0;
	xX[95] = x1;
	packed_tf = twiddles[32];
	x0 = xX[32];
	x1 = xX[96];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[32] = x0;
	xX[96] = x1;
	packed_tf = twiddles[33];
	x0 = xX[33];
	x1 = xX[97];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[33] = x0;
	xX[97] = x1;
	packed_tf = twiddles[34];
	x0 = xX[34];
	x1 = xX[98];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[34] = x0;
	xX[98] = x1;
	packed_tf = twiddles[35];
	x0 = xX[35];
	x1 = xX[99];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[35] = x0;
	xX[99] = x1;
	packed_tf = twiddles[36];
	x0 = xX[36];
	x1 = xX[100];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[36] = x0;
	xX[100] = x1;
	packed_tf = twiddles[37];
	x0 = xX[37];
	x1 = xX[101];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[37] = x0;
	xX[101] = x1;
	packed_tf = twiddles[38];
	x0 = xX[38];
	x1 = xX[102];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[38] = x0;
	xX[102] = x1;
	packed_tf = twiddles[39];
	x0 = xX[39];
	x1 = xX[103];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[39] = x0;
	xX[103] = x1;
	packed_tf = twiddles[40];
	x0 = xX[40];
	x1 = xX[104];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[40] = x0;
	xX[104] = x1;
	packed_tf = twiddles[41];
	x0 = xX[41];
	x1 = xX[105];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[41] = x0;
	xX[105] = x1;
	packed_tf = twiddles[42];
	x0 = xX[42];
	x1 = xX[106];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[42] = x0;
	xX[106] = x1;
	packed_tf = twiddles[43];
	x0 = xX[43];
	x1 = xX[107];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[43] = x0;
	xX[107] = x1;
	packed_tf = twiddles[44];
	x0 = xX[44];
	x1 = xX[108];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[44] = x0;
	xX[108] = x1;
	packed_tf = twiddles[45];
	x0 = xX[45];
	x1 = xX[109];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[45] = x0;
	xX[109] = x1;
	packed_tf = twiddles[46];
	x0 = xX[46];
	x1 = xX[110];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[46] = x0;
	xX[110] = x1;
	packed_tf = twiddles[47];
	x0 = xX[47];
	x1 = xX[111];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[47] = x0;
	xX[111] = x1;
	packed_tf = twiddles[48];
	x0 = xX[48];
	x1 = xX[112];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[48] = x0;
	xX[112] = x1;
	packed_tf = twiddles[49];
	x0 = xX[49];
	x1 = xX[113];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[49] = x0;
	xX[113] = x1;
	packed_tf = twiddles[50];
	x0 = xX[50];
	x1 = xX[114];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[50] = x0;
	xX[114] = x1;
	packed_tf = twiddles[51];
	x0 = xX[51];
	x1 = xX[115];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[51] = x0;
	xX[115] = x1;
	packed_tf = twiddles[52];
	x0 = xX[52];
	x1 = xX[116];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[52] = x0;
	xX[116] = x1;
	packed_tf = twiddles[53];
	x0 = xX[53];
	x1 = xX[117];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[53] = x0;
	xX[117] = x1;
	packed_tf = twiddles[54];
	x0 = xX[54];
	x1 = xX[118];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[54] = x0;
	xX[118] = x1;
	packed_tf = twiddles[55];
	x0 = xX[55];
	x1 = xX[119];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[55] = x0;
	xX[119] = x1;
	packed_tf = twiddles[56];
	x0 = xX[56];
	x1 = xX[120];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[56] = x0;
	xX[120] = x1;
	packed_tf = twiddles[57];
	x0 = xX[57];
	x1 = xX[121];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[57] = x0;
	xX[121] = x1;
	packed_tf = twiddles[58];
	x0 = xX[58];
	x1 = xX[122];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[58] = x0;
	xX[122] = x1;
	packed_tf = twiddles[59];
	x0 = xX[59];
	x1 = xX[123];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[59] = x0;
	xX[123] = x1;
	packed_tf = twiddles[60];
	x0 = xX[60];
	x1 = xX[124];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[60] = x0;
	xX[124] = x1;
	packed_tf = twiddles[61];
	x0 = xX[61];
	x1 = xX[125];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[61] = x0;
	xX[125] = x1;
	packed_tf = twiddles[62];
	x0 = xX[62];
	x1 = xX[126];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[62] = x0;
	xX[126] = x1;
	packed_tf = twiddles[63];
	x0 = xX[63];
	x1 = xX[127];
	CplxMul32Packed(x1, packed_tf);
	Radix2Int0Butterfly(x0, x1);
	xX[63] = x0;
	xX[127] = x1;
}

void radix2_int32cplx_pfft(Int32Cplx* xX, int N, const PackedInt16Cplx* twiddles, int* interleaved_bro_lookup, int bro_N, int start_span, int end_span)
{
	int span, twiddle, strides;
	if(start_span == 1)
	{
		bro_with_lookup(xX, interleaved_bro_lookup, bro_N);
	}
	span = start_span;
	strides = N / 2 / span;
	do
	{
		Int32Cplx x0, x1;
		int idx = 0;
		do
		{
			x0 = xX[idx];
			x1 = xX[idx + span];
			Radix2Int1Butterfly(x0, x1);
			xX[idx] = x0;
			xX[idx + span] = x1;
			idx += span << 1;
		}
		while(idx < N);
		twiddle = 1;
		while(twiddle < span)
		{
			int packed_tf = twiddles[strides * twiddle];
			idx = twiddle;
			do
			{
				x0 = xX[idx];
				x1 = xX[idx + span];
				CplxMul32Packed(x1, packed_tf);
				Radix2Int0Butterfly(x0, x1);
				xX[idx] = x0;
				xX[idx + span] = x1;
				idx += span << 1;
			}
			while(idx < N);
			twiddle++;
		}
		span <<= 1;
		strides >>= 1;
	}
	while(span < end_span);
}
